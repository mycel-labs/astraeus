syntax = "proto3";

package account;

import "google/api/annotations.proto";

option go_package = "../go/pb";

// Structs
message Account {
    string account_id = 1;
    string owner = 2;
    uint64 public_key_x = 3;
    uint64 public_key_y = 4;
    Curve curve = 5;
}

enum Curve {
  CURVE_UNKNOWN=0;
  ECDSA = 1;
  EDDSA = 2;
}

message TimeLock {
    uint64 lock_until = 1;
    string locked_by = 2;
}

// Requests
message TimedSignature {
    uint64 valid_for = 1;
    bytes message_hash = 2;
    bytes signature = 3;
    string signer = 4;
}

message AccountOperationRequest {
    string account_id = 1;
    TimedSignature proof = 2;
}

message CreateAccountRequest {}

message TransferAccountRequest {
    AccountOperationRequest base = 1;
    string to = 2;
}

message DeleteAccountRequest {
    AccountOperationRequest base = 1;
}

message LockAccountRequest {
    AccountOperationRequest base = 1;
}

message UnlockAccountRequest {
    AccountOperationRequest base = 1;
}

message ApproveAddressRequest {
    AccountOperationRequest base = 1;
    string address = 2;
}

message RevokeApprovalRequest {
    AccountOperationRequest base = 1;
    string address = 2;
}

message SignRequest {
    AccountOperationRequest base = 1;
    bytes data = 2;
}

message AccountIdRequest {
    string account_id = 1;
}

// Responses
message AccountResponse {
    Account account = 1;
}

message BoolResponse {
    bool result = 1;
}

message BytesResponse {
    bytes data = 1;
}

message TimeLockResponse {
    TimeLock time_lock = 1;
}

// Service
service AccountService {
    rpc CreateAccount(CreateAccountRequest) returns (BytesResponse) {
        option (google.api.http) = {
            post: "/v1/accounts"
            body: "*"
        };
    }
    rpc TransferAccount(TransferAccountRequest) returns (BytesResponse) {
        option (google.api.http) = {
            post: "/v1/accounts/{base.account_id}/transfer"
            body: "*"
        };
    }
    rpc DeleteAccount(DeleteAccountRequest) returns (BytesResponse) {
        option (google.api.http) = {
            delete: "/v1/accounts/{base.account_id}"
        };
    }
    rpc LockAccount(LockAccountRequest) returns (BytesResponse) {
        option (google.api.http) = {
            post: "/v1/accounts/{base.account_id}/lock"
            body: "*"
        };
    }
    rpc UnlockAccount(UnlockAccountRequest) returns (BytesResponse) {
        option (google.api.http) = {
            post: "/v1/accounts/{base.account_id}/unlock"
            body: "*"
        };
    }
    rpc ApproveAddress(ApproveAddressRequest) returns (BytesResponse) {
        option (google.api.http) = {
            post: "/v1/accounts/{base.account_id}/approve"
            body: "*"
        };
    }
    rpc RevokeApproval(RevokeApprovalRequest) returns (BoolResponse) {
        option (google.api.http) = {
            post: "/v1/accounts/{base.account_id}/revoke"
            body: "*"
        };
    }
    rpc Sign(SignRequest) returns (BytesResponse) {
        option (google.api.http) = {
            post: "/v1/accounts/{base.account_id}/sign"
            body: "*"
        };
    }
    rpc GetAccount(AccountIdRequest) returns (AccountResponse) {
        option (google.api.http) = {
            get: "/v1/accounts/{account_id}"
        };
    }
    rpc IsApproved(ApproveAddressRequest) returns (BoolResponse) {
        option (google.api.http) = {
            get: "/v1/accounts/{base.account_id}/approved/{address}"
        };
    }
    rpc IsOwner(ApproveAddressRequest) returns (BoolResponse) {
        option (google.api.http) = {
            get: "/v1/accounts/{base.account_id}/owner/{address}"
        };
    }
    rpc IsLocked(AccountIdRequest) returns (BoolResponse) {
        option (google.api.http) = {
            get: "/v1/accounts/{account_id}/locked"
        };
    }
    rpc GetLock(AccountIdRequest) returns (TimeLockResponse) {
        option (google.api.http) = {
            get: "/v1/accounts/{account_id}/lock"
        };
    }
}
